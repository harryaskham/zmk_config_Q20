/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>


#define SYM 1
#define UPPER 2
#define LOWER 3

#define MO_TOG(layer) &mo_tog layer layer

&sk {
    release-after-ms = <3000>;
};


/ {
    behaviors {
        tap: tap {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            };
    };
    behaviors {
  	    mtt: mod_tap_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <125>;
            bindings = <&tap>, <&tap>;
        };
    };
    behaviors {
  	    sktt: mod_sk_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <125>;
            bindings = <&sk>, <&tap>;  // press once to SK a mod, twice to tap
        };
    };
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };
    behaviors {
        td_clk_bt: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };
    behaviors {
        tog_out: tog_out {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    behaviors {
        td_lpar: lpar {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mtt LBKT LPAR>, <&mtt LT LBRC>;
        };
    };
    behaviors {
        td_lpar_t: lpar_t {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mtt LPAR T>, <&mtt LBRC LBKT>;
        };
    };
    behaviors {
        td_rpar: rpar {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mtt RBKT RPAR>, <&mtt GT RBRC>;
        };
    };
    behaviors {
        td_rpar_y: rpar_y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mtt RPAR Y>, <&mtt RBRC RBKT>;
        };
    };
    behaviors {
        td_hash_gr_ti: hash_gr_ti {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp HASH>, <&kp GRAVE>, <&kp TILDE>;
        };
    };
    behaviors {
        td_0_alt_ctrl: 0_alt_ctrl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&sk LCTRL>, <&sk LALT>, <&kp N0>;
        };
    };
    behaviors {
        gresc_inner: grave_escape_inner {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&gresc_inner>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
//         --------------------------------------------------------------------------------------------------------------------------
//         |    Shoulder Key1    |                                                                             |    Shoulder Key2    |
// |         Call key      |      Blackberry Key        |    Trackpad    |             Back Key                |             Endcall Key          |
// |     Q      |     W    |     E    |     R    |      T      |       Y        |       U        |        I        |       O      |      P        |
// |     A      |     S    |     D    |     F    |      G      |       H        |       J        |        K        |       L      |      ←        |
// |     alt    |     Z    |     X    |     C    |      V      |       B        |       N        |        M        |       $      |    Enter      |
//        |         aA     |         0           |           SPACE              |         SYM         |        aA          |
//        -----------------------------------------------------------------------------------------------------------------

                 &mkp LCLK                                                                                             &mkp RCLK
    &gresc                         &kp LGUI                                 &mkp LCLK                        &kp  K_BACK                         &kp BACKSLASH
    &mtt TAB Q       &mtt N1 W     &mtt N2 E   &mtt N3 R   &mtt LPAR T      &mtt RPAR Y     &mtt UNDER U     &mtt MINUS I     &mtt PLUS O        &mtt AT P
    &bhm LCTRL A     &mtt N4 S     &mtt N5 D   &mtt N6 F   &mtt SLASH G     &mtt COLON H    &mtt SEMI J      &mtt APOS K      &mtt DQT L         &kp BSPC
    &sk LSHIFT       &mtt N7 Z     &mtt N8 X   &mtt N9 C   &mtt QMARK V     &mtt EXCL B     &mtt COMMA N     &mtt DOT M       &mtt PIPE DOLLAR   &kp ENTER
    &tog LOWER                     &td_0_alt_ctrl                           &kp SPACE                        &tog SYM                            &tog UPPER
            >;
        };


        sym_layer {

            bindings = <
                 &kp SCRL_UP                                                                                     &kp SCRL_DOWN
    &trans                       &trans                                      &trans                           &trans                              &trans
    &kp HASH          &kp N1     &kp N2      &kp N3    &td_lpar              &td_rpar        &kp UNDER        &kp MINUS        &mtt KP_EQUAL PLUS &kp AT
    &bhm LCTRL STAR   &kp N4     &kp N5      &kp N6    &mtt BACKSLASH SLASH  &kp COLON       &kp SEMI         &kp APOS         &kp DQT            &kp DEL
    &trans            &kp N7     &kp N8      &kp N9    &kp QMARK             &kp EXCL        &mtt LT COMMA    &mtt GT DOT      &trans             &kp ENTER
    &trans                       &trans                                      &kp SPACE                        &trans                              &trans
            >;
        };

        upper_layer {

            bindings = <
                 &msc SCRL_UP                                                                                       &msc SCRL_DOWN
    &bt  BT_SEL 0            &bt BT_SEL 1                         &td_clk_bt                     &bt BT_SEL 2                        &bt BT_SEL 3
    &none         &kp UP     &none       &sys_reset &kp LBRC      &kp RBRC      &kp LT           &kp GT             &kp PIPE         &kp KP_EQUAL
    &kp  LEFT     &kp DOWN   &kp RIGHT   &none      &kp BSLH      &kp AMPS      &kp LBRC         &kp RBRC           &kp CARET        &kp BSPC
    &trans        &none      &none       &none      &bl BL_DEC    &bl BL_TOG    &bl BL_INC       &ext_power EP_TOG  &bootloader      &kp ENTER
    &trans                   &trans                               &tog_out OUT_TOG SPACE         &trans                              &trans
            >;
        };

        lower_layer {

            bindings = <
                 &trans                                                                                          &trans
    &trans                       &trans                              &mkp LCLK                   &trans                            &trans
    &kp TAB         &kp F1       &kp F2     &kp F3     &trans        &kp PAGE_UP   &msc SCRL_UP  &kp UP          &msc SCRL_DOWN    &trans
    &sk LCTRL       &kp F4       &kp F5     &kp F6     &trans        &kp PAGE_DOWN &kp LEFT      &kp DOWN        &kp RIGHT         &trans
    &sk LSHIFT      &kp F7       &kp F8     &kp F9     &trans        &trans        &trans        &trans          &trans            &trans
    &trans                       &sk LALT                            &trans                      &trans                            &trans
            >;
        };

    };
};
